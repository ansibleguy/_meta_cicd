#!/usr/bin/env bash

# {{ ansible_managed }}

set -e -o pipefail

if [ -z "$1" ]
then
  echo 'Arguments:'
  echo '  1: collection name'
  exit 1
fi

PATH_TEST='{{ tester.path.test }}'
PATH_BADGE='{{ tester.path.web }}'
PATH_VENV='{{ tester.path.venv }}'
HOME='{{ tester.path.home }}'

COLLECTION="$1"
LABEL='LINT'
status='RUNNING'

declare -A BADGE_COLORS
BADGE_COLORS[UNKNOWN]='#{{ tester.colors.wait }}'
BADGE_COLORS[RUNNING]='#{{ tester.colors.run }}'
BADGE_COLORS[PASSED]='#{{ tester.colors.ok }}'
BADGE_COLORS[FAILED]='#{{ tester.colors.bad }}'
BADGE_COLORS[FAILED-ENVIRONMENT]='#{{ tester.colors.bad }}'

function update_badge {
  cd "$PATH_BADGE"
  rm -f "$COLLECTION.collection.lint.svg"
  anybadge --label="$LABEL" --value="$status | $(date '+%Y-%m-%d %H:%M') GMT+2" --file="$COLLECTION.collection.lint" --color="${BADGE_COLORS[$status]}"
}

source "$PATH_VENV/bin/activate"

update_badge

# preparations for tests
cd "$PATH_TEST"
git clone "https://github.com/ansibleguy/collection_$COLLECTION.git"
cd "collection_$COLLECTION"

set +e  # soft-handling of failures
chmod +x ./scripts/lint.sh

if ! ./scripts/lint.sh
then
  status='FAILED'
else
  status='PASSED'
fi

update_badge
cd /tmp
rm -rf "$PATH_TEST/collection_$COLLECTION"
exit 0
